{
    "contents" : "---\ntitle: \"Reproducible Research: Peer Assessment 1\"\noutput: \n  html_document:\n    keep_md: true\n---\n\n\n## Loading and preprocessing the data\n\nLoad necessary packages to process and plot data. Disable scientific notation for outputs.\n\n```{r}\nlibrary(data.table)\nlibrary(lattice)\noptions(scipen=999)\n```\n\nDownload the data if it doesn't already exist in the 'data' folder and unzip.\n\n```{r}\n## Create \"data\" directory if doesn't already exist. \nif(!file.exists(\"data\")) {\n    dir.create(\"data\")\n}\n\n## Download and unzip dataset if doesn't already exist\nif(!file.exists(\"data/activity.csv\")) {\n    temp <- tempfile()\n    fileUrl <- \"https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip\"\n    download.file(fileUrl, temp, mode=\"wb\")\n    unzip(temp, exdir=\"data\")\n}\n```\n\nLoad dataset into a dataframe and do a preliminary analysis.\n\n```{r}\ndata <- read.csv(\"data/activity.csv\")\nstr(data)\nhead(data)\n```\n\nLoad data into a data table for further processing. Identify NA values and format date column.\n\n```{r}\ndata <- data.table(data, na.strings=\"NA\")\n\n## Format date column as date\ndata$date <- as.Date(data$date, \"%Y-%m-%d\")\n```\n\n## What is mean total number of steps taken per day?\n\n```{r}\n## Group data by date and get the sum of steps for each day. Plot results.\ndata_day <- data[, list(sum_steps=sum(steps)), by=date]\nhist(x=data_day$sum_steps, \n     breaks=20,\n     xlab=\"Daily steps\",\n     main=\"Frequency of total steps for each day\",\n     col=colours()[33])\n\n## Mean and median number of steps taken each day - ignoring NA values.\nmean_steps <- mean(data_day$sum_steps, na.rm=T)\nmean_steps\n\nmedian_steps <- median(data_day$sum_steps, na.rm=T)\nmedian_steps\n```\n\nThe mean number of steps taken per day is **`r signif(mean_steps, digits=7)`** and the median is **`r median_steps`**.\n\n## What is the average daily activity pattern?\n\nPlot a chart showing the average number of steps taken in each interval during the study. \n\n```{r}\n## Group data by interval and add column showing mean steps for each time interval.\ndata_interval <- data[, list(mean_steps=mean(steps, na.rm=T)), by=interval]\n\n##  Time series plot of the average number of steps taken\nplot(data_interval$interval,\n     data_interval$mean_steps, \n     type=\"l\",\n     col=colours()[430],\n     lwd=2,\n     xlab=\"Interval\",\n     ylab=\"Steps\",\n     main=\"Average number of steps\")\n```\n\n\n\n```{r}\n## Get interval with the maximum number of steps\nmax_steps <- max(data_interval$mean_steps)\nmax_steps\n\nmax_interval <- data_interval[which.max(mean_steps), interval]\nmax_interval\n```\n\nThe 5-minute interval that, on average, contains the maximum number of steps is **`r max_interval`**, with **`r signif(max_steps, digits=3)`** steps.\n\n## Imputing missing values\n\n```{r}\n## Calculate and report the total number of missing values in the dataset \n## (i.e. the total number of rows with NAs)\nmissing_steps <- sum(is.na(data$steps))\nmissing_steps\n```\n\nThere are **`r missing_steps`** observations with missing values.\n\nCreate a dataset with the missing observations of steps replaced with the mean number of steps in that interval.\n\n```{r}\n## Make a copy of the original dataset and add column of mean steps at each interval\ndata_complete <- data.table(data) \ndata_complete[, `:=`( mean_steps=as.integer(round(mean(steps, na.rm=T)))), by=interval]\n\n## Function to replace NA values in 'steps' with the 'mean_steps' value\nfillNAs <- function(data_in){\n    data_in[is.na(steps), steps := mean_steps]\n}        \n\nfillNAs(data_complete)\nstr(data_complete)\n```\n\n\n## Are there differences in activity patterns between weekdays and weekends?\n\nGet the sum of steps for each day from the 'completed' data and plot.\n\n```{r}\n## Aggregate complete dataset for each day with sum of steps for each day. Plot result.\ndata_complete_day <- data_complete[, list(sum_steps=sum(steps)), by=date]\nhist(x=data_complete_day$sum_steps, \n     breaks=20,\n     xlab=\"Daily steps\",\n     main=\"Frequency of total steps for each day (completed data)\",\n     col=colours()[50])\n```\n\n\n```{r}\n## Get the mean and median number of daily steps\ncomplete_mean_steps <- mean(data_complete_day$sum_steps, na.rm=T)\ncomplete_mean_steps\n\ncomplete_median_steps <- median(data_complete_day$sum_steps, na.rm=T)\ncomplete_median_steps\n```\n\nFor the 'completed' dataset, the mean number of steps taken per day is **`r signif(complete_mean_steps, digits=7)`** and the median is **`r complete_median_steps`**; compared to **`r signif(mean_steps, digits=7)`** and **`r median_steps`** in the raw data.\n\nComparison of weekday activity against weekend activity using the 'completed' dataset.\n\n```{r}\n## Add column identifying weekdays and weekends.\ndata_complete$day_type <- ifelse(grepl(\"S(at|un)\", weekdays(data_complete$date, abbr=T)), \n                                 \"weekend\", \"weekday\") \n\n## Calculate mean number of steps for each interval, for weekdays and weekends. \ndata_complete_weekday <- data_complete[, list(mean_steps=mean(steps)), \n                                       by=list(interval, day_type)]\n\n## Panel plot comparing the average number of steps taken per 5-minute interval across weekdays and weekends\nxyplot(data_complete_weekday$mean_steps ~ data_complete_weekday$interval|data_complete_weekday$day_type, \n        main=\"Average number of steps across all weekdays and weekends\",\n        xlab=\"Interval\",\n        ylab=\"Mean steps\",\n        layout=c(1,2),\n        type=\"l\"\n)\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "created" : 1455464487507.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3025522787",
    "id" : "91F49263",
    "lastKnownWriteTime" : 1455483523,
    "path" : "D:/R/Reproducible Research/Assignment/RepData_PeerAssessment1/PA1_template.Rmd",
    "project_path" : "PA1_template.Rmd",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_markdown"
}